# jemdoc: menu{MENU}{connectomics.html}

= Connectomics - Inferring Connectivity From Calcium Fluorescence

  . What's the +connectivities+ in population of neurons ?
  . What's the +mathematical model+ of spikes ?
  . How do neurons +comupte+ and +memory+ ?

We are working towards these exciting problems !

== Py-oopsi : the python implementation of the fast-oopsi algorithm

Fast-oopsi was developed by joshua vogelstein in 2009, which is now widely used to extract neuron spike activities from calcium fluorescence signals. Here, we propose detailed implementation of the fast-oopsi algorithm in python programming language. Some corrections are also made to the original fast-oopsi paper.

The +py-oopsi+ implementation can be obtained at: [https://github.com/liubenyuan/py-oopsi py-oopsi @ github]

~~~
{}{img_left}{pics/pyoopsi-demo.png}{Simulation Result of py-oopsi}{500px}{}{}

Top (a), The synthetic calcium fluorescence trace, where random noise are added to the ground truth signal (shows in red color). The parameters are : T=2000, dt=0.02ms, lambda=0.1, tau=1.5 and sigma=0.2.

Bottom (b), (c), (d), The reconstructed spikes from fluorescence trace using +py-oopsi+, +wiener+ filter, and +discretize binning+. The py-oopsi favors sparse (via Poison prior) and non-negativity, which has the most sparse yet positive spikes. Wiener filter has oscillary at the inferred spikes, discretize with binning is not robust agains noise.
~~~


